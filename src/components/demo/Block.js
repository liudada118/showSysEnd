import React, { useEffect, useState } from "react";
import { findMax } from "../../assets/util/util";
import { carBackLine, pressNew } from "../../assets/util/line";
import { Button, Input, Slider } from "antd";
import { CSVLink } from "react-csv";
let data = [];

function jet(min, max, x) {
    let red, g, blue;
    let dv;
    red = 1.0;
    g = 1.0;
    blue = 1.0;
    if (x < min) {
        x = min;
    }
    if (x > max) {
        x = max;
    }
    dv = max - min;
    if (x < min + 0.25 * dv) {
        // red = 0;
        // g = 0;
        // blue = 0;

        red = 0;
        g = (4 * (x - min)) / dv;
    } else if (x < min + 0.5 * dv) {
        red = 0;
        blue = 1 + (4 * (min + 0.25 * dv - x)) / dv;
    } else if (x < min + 0.75 * dv) {
        red = (4 * (x - min - 0.5 * dv)) / dv;
        blue = 0;
    } else {
        g = 1 + (4 * (min + 0.75 * dv - x)) / dv;
        blue = 0;
    }
    var rgb = new Array();
    rgb[0] = parseInt(255 * red + '');
    rgb[1] = parseInt(255 * g + '');
    rgb[2] = parseInt(255 * blue + '');
    return rgb;
}

let ws,
    pressValue = localStorage.getItem("carValuePress")
        ? JSON.parse(localStorage.getItem("carValuePress"))
        : 1000;

let collection = JSON.parse(localStorage.getItem("collection"))
    ? JSON.parse(localStorage.getItem("collection"))
    : [["data", "name"]];
let colFalg = false,
    wsPointData;

function colRowArr(arr) {
    const resArr = [];
    for (let i = 0; i < 32; i++) {
        let num = 0;
        for (let j = 0; j < 32; j++) {
            num += arr[i * 32 + j];
        }
        resArr.push(num);
    }
    return resArr;
}

function gaussBlur_1(scl, w, h, r) {
    const tcl = new Array(scl.length).fill(1)
    var rs = Math.ceil(r * 2.57); // significant radius
    for (var i = 0; i < h; i++)
        for (var j = 0; j < w; j++) {
            var val = 0,
                wsum = 0;
            for (var iy = i - rs; iy < i + rs + 1; iy++)
                for (var ix = j - rs; ix < j + rs + 1; ix++) {
                    var x = Math.min(w - 1, Math.max(0, ix));
                    var y = Math.min(h - 1, Math.max(0, iy));
                    var dsq = (ix - j) * (ix - j) + (iy - i) * (iy - i);
                    var wght = Math.exp(-dsq / (2 * r * r)) / (Math.PI * 2 * r * r);
                    val += scl[y * w + x] * wght;
                    wsum += wght;
                }
            tcl[i * w + j] = Math.round(val / wsum);
        }
    return tcl
}

function interpSmall(smallMat, width, height, interp1, interp2) {
    // for (let x = 1; x <= Length; x++) {
    //   for (let y = 1; y <= Length; y++) {
    //     bigMat[
    //       Length * num * (num * (y - 1)) +
    //       (Length * num * num) / 2 +
    //       num * (x - 1) +
    //       num / 2
    //     ] = smallMat[Length * (y - 1) + x - 1] * 10;
    //   }
    // }
    // 32, 10, 4, 5
    const bigMat = new Array((width * interp1) * (height * interp2)).fill(0)
    for(let i = 0 ; i < height ; i++){
      for(let j = 0 ; j < width ; j ++){
        bigMat[(width * interp1) * i* interp2 + (j * interp1)
  
          // + (width * interp1) * Math.floor(interp2/2)
  
          // + Math.floor(interp1/2)
         ] = smallMat[i*width + j] * 10
      }
    }
    // console.log(bigMat.length)
    return bigMat
  }

export default function Demo() {
    const [data, setData] = useState([]);
    const [max, setMax] = useState(0);
    const [maxCol, setMaxCol] = useState(0);
    const [valuePress, setValuePress] = useState(
        localStorage.getItem("carValuePress")
            ? JSON.parse(localStorage.getItem("carValuePress"))
            : 1000
    );
    const [csvData, setCsvData] = useState(
        JSON.parse(localStorage.getItem("collection"))
            ? JSON.parse(localStorage.getItem("collection"))
            : [["data", "name"]]
    );
    const [length, setLength] = useState(
        JSON.parse(localStorage.getItem("collection"))
            ? JSON.parse(localStorage.getItem("collection")).length
            : 1
    );
    const [flag, setFlag] = useState(false);
    const [name, setName] = useState("");
    const [objArea, setArea] = useState("");



    useEffect(() => {
        // const data = [0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,15,13,0,0,0,27,32,25,25,23,18,19,0,0,0,27,32,25,25,23,18,19,0,0,0,18,30,27,27,26,24,0,0,0,0,0,14,11,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,11,0,0,0,0,0,0,12,12,25,31,30,39,0,0,19,12,18,18,24,27,41,20,0,0,20,0,11,11,16,17,24,20,0,0,20,0,11,11,16,17,24,20,0,0,0,0,0,0,0,11,0,0,0,0,11,15,20,20,18,14,12,20,0,0,19,14,16,16,13,13,13,0,0,0,20,13,21,21,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
        // const data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 48, 25, 8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 6, 7, 28, 37, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 6, 2, 4, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 3, 11, 22, 52, 35, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 31, 50, 14, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 7, 19, 9, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 9, 30, 48, 30, 5, 3, 5, 9, 7, 3, 0, 0, 0, 0, 1, 30, 63, 35, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 46, 49, 10, 2, 1, 1, 5, 12, 8, 0, 0, 0, 0, 4, 72, 25, 35, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 24, 26, 5, 1, 0, 0, 2, 14, 54, 0, 0, 0, 0, 7, 59, 52, 40, 27, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 23, 33, 12, 1, 0, 0, 0, 3, 27, 60, 0, 0, 0, 0, 20, 46, 46, 35, 32, 9, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 22, 21, 14, 2, 1, 0, 2, 6, 39, 83, 0, 0, 0, 0, 21, 41, 38, 44, 52, 26, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 24, 19, 11, 2, 0, 0, 0, 9, 65, 77, 0, 0, 0, 0, 38, 63, 44, 41, 55, 38, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 14, 17, 2, 1, 0, 0, 19, 36, 47, 0, 0, 0, 0, 20, 73, 37, 39, 55, 54, 26, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 40, 17, 13, 10, 1, 0, 0, 1, 8, 23, 0, 0, 0, 2, 46, 66, 29, 31, 54, 55, 30, 14, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 10, 48, 14, 6, 4, 1, 0, 1, 6, 8, 0, 0, 0, 1, 36, 60, 40, 17, 42, 54, 58, 15, 4, 0, 0, 0, 0, 0, 0, 0, 1, 4, 20, 26, 29, 14, 5, 11, 2, 1, 3, 2, 0, 0, 2, 1, 83, 42, 18, 17, 34, 59, 48, 21, 7, 1, 0, 0, 1, 0, 1, 2, 1, 1, 13, 21, 17, 17, 11, 18, 4, 1, 1, 0, 0, 0, 0, 0, 46, 45, 14, 5, 22, 42, 44, 36, 12, 2, 1, 1, 1, 0, 0, 1, 0, 3, 6, 32, 41, 40, 18, 17, 8, 1, 1, 0, 0, 0, 0, 0, 31, 35, 6, 2, 15, 52, 42, 20, 14, 6, 2, 3, 3, 3, 3, 4, 1, 3, 7, 12, 34, 52, 43, 41, 12, 2, 1, 0, 0, 0, 0, 0, 52, 30, 4, 1, 12, 28, 27, 32, 13, 6, 3, 5, 7, 16, 9, 33, 9, 19, 6, 7, 40, 28, 16, 30, 33, 4, 1, 0, 0, 0, 0, 0, 35, 29, 5, 0, 14, 26, 43, 18, 21, 9, 4, 7, 14, 13, 7, 16, 13, 19, 15, 6, 23, 46, 23, 28, 33, 3, 1, 0, 0, 0, 0, 0, 25, 18, 2, 0, 2, 17, 21, 29, 20, 22, 9, 10, 14, 11, 20, 31, 27, 22, 20, 10, 18, 57, 36, 40, 40, 1, 0, 1, 0, 0, 0, 0, 23, 22, 1, 0, 2, 16, 22, 25, 29, 48, 20, 15, 26, 16, 13, 16, 15, 15, 9, 10, 12, 37, 54, 44, 14, 0, 0, 1, 0, 0, 0, 0, 47, 12, 1, 0, 2, 12, 29, 40, 35, 40, 25, 17, 27, 14, 13, 10, 16, 13, 13, 17, 10, 29, 32, 48, 4, 0, 0, 0, 0, 0, 0, 0, 53, 5, 0, 0, 6, 6, 33, 45, 37, 67, 43, 31, 28, 15, 7, 9, 12, 10, 10, 8, 4, 15, 18, 7, 1, 0, 0, 0, 0, 0, 0, 1, 29, 1, 0, 0, 2, 4, 19, 56, 40, 45, 78, 36, 42, 15, 6, 6, 7, 8, 2, 3, 1, 2, 4, 1, 0, 0, 0, 0, 0, 0, 1, 1, 13, 1, 0, 0, 0, 2, 16, 52, 61, 39, 52, 39, 44, 13, 9, 1, 1, 2, 1, 2, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 0, 1, 4, 14, 22, 51, 33, 27, 29, 44, 12, 3, 1, 0, 1, 1, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 0, 1, 0, 1, 3, 12, 29, 85, 56, 38, 31, 11, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 0, 0, 0, 1, 4, 12, 29, 85, 56, 37, 30, 11, 1, 2, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 21, 16, 3, 7, 2, 7, 3, 8, 15, 30, 20, 7, 4, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 35, 44, 7, 3, 1, 3, 2, 7, 10, 8, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 19, 51, 2, 1, 1, 1, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 18, 57, 32, 3, 4, 8, 5, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        // const data = [0,0,0,0,0,0,0,0,10,4,1,23,2,1,9,57,61,46,31,93,47,21,18,9,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,15,3,2,2,7,30,19,13,43,53,46,45,25,14,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,2,2,2,2,4,3,7,87,46,39,46,44,13,5,1,1,0,0,0,0,3,0,0,0,0,0,0,0,1,1,1,2,2,2,2,1,2,1,1,16,10,27,96,49,38,9,2,1,0,0,0,0,55,3,2,1,1,1,1,1,2,3,4,7,5,3,2,1,2,1,4,7,6,8,7,27,84,22,2,1,0,0,1,1,24,18,11,4,10,12,4,4,9,8,19,25,31,10,4,2,2,0,1,3,3,4,8,61,87,26,4,1,0,1,9,7,11,35,28,17,20,31,8,9,13,13,27,24,40,26,5,1,1,0,0,1,2,2,3,22,35,49,9,1,0,1,9,32,2,11,11,16,16,30,8,26,18,19,45,34,29,41,19,3,1,1,1,2,2,5,8,32,31,44,19,1,0,0,9,28,1,3,4,16,15,16,13,15,18,18,23,23,43,43,51,4,1,1,1,4,4,11,12,23,34,63,31,2,2,4,18,39,1,1,0,2,3,11,17,20,20,24,19,28,34,35,43,7,5,3,1,4,11,13,15,16,66,46,42,6,0,4,19,45,0,0,0,0,0,2,5,9,15,24,27,34,43,55,39,11,8,7,4,15,11,17,17,27,37,44,32,13,2,8,23,34,0,0,0,0,0,1,1,2,9,21,22,32,56,46,43,11,14,4,9,28,30,26,25,22,28,28,31,28,5,10,17,18,0,0,0,0,1,0,0,1,3,8,23,41,59,48,31,14,20,2,10,25,27,37,31,42,33,20,30,25,7,7,3,3,0,0,0,0,0,0,1,0,2,7,35,28,39,22,34,28,9,1,6,23,37,43,34,19,42,29,22,23,10,2,1,1,0,0,0,0,0,1,0,1,2,5,29,49,81,40,42,30,6,2,3,6,14,20,22,16,26,39,32,23,7,2,1,0,0,0,0,2,0,0,0,0,2,9,38,43,62,41,32,18,5,7,9,25,22,22,23,18,30,29,27,17,3,0,1,1,0,0,0,0,0,0,1,2,5,13,24,54,51,39,24,16,34,17,12,32,36,23,23,14,29,44,23,16,1,0,1,1,0,0,0,0,1,3,12,12,20,23,29,34,19,39,30,10,7,3,10,27,30,35,33,17,34,39,21,14,0,0,1,1,1,0,0,1,4,16,15,14,21,29,42,35,27,29,26,15,9,2,4,14,22,21,23,20,33,50,27,11,0,0,1,1,1,1,1,6,24,24,28,18,23,28,23,32,30,33,15,4,3,1,1,4,12,11,26,23,45,47,30,3,0,0,1,1,7,4,4,24,22,44,31,12,14,41,22,35,32,33,7,6,2,0,1,2,3,3,7,26,25,23,26,3,0,0,0,0,31,18,8,22,14,35,22,7,8,37,25,25,26,11,2,2,1,0,0,2,1,3,5,34,25,25,17,1,0,0,0,0,53,12,4,2,1,3,2,1,1,4,3,4,11,4,1,4,0,0,1,2,3,2,4,8,23,24,5,0,0,0,0,0,31,4,1,1,0,1,2,0,0,2,2,2,2,2,0,1,0,1,0,3,1,2,4,9,28,19,2,0,0,0,0,0,18,5,2,2,2,3,1,0,1,4,4,3,5,1,1,2,1,3,3,6,4,6,17,35,35,9,2,0,0,0,1,0,8,4,1,1,1,3,1,1,0,5,6,4,6,1,1,3,2,5,5,9,6,10,22,25,28,5,1,0,0,0,0,0,3,2,0,0,0,1,0,0,0,4,11,8,16,1,1,3,5,15,29,40,32,41,28,27,12,3,2,0,0,0,0,1,3,1,1,0,0,1,0,0,0,4,12,8,17,1,1,3,6,15,28,39,33,42,28,28,11,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,6,29,76,2,3,23,34,30,54,48,24,5,4,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,18,13,26,0,14,32,36,47,63,28,8,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,13,14,41,1,3,23,10,4,4,2,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,0,0,4,15,21,10,0,1,2,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,1]
        // const interpArr = interpSmall(data,32,32,2,1)
        // const res = gaussBlur_1(interpArr, 64, 32, 2)
        const newData = []
        // const data = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,15,26,24,13,4,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,5,14,25,27,17,6,2,1,0,0,0,0,0,0,1,2,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,2,5,14,26,30,21,8,3,1,1,0,0,0,0,0,2,4,6,5,2,1,0,0,0,0,0,0,0,0,0,0,0,2,7,17,28,30,19,8,3,3,2,2,0,0,0,1,5,13,17,13,6,2,0,0,0,0,0,0,0,0,0,0,1,3,11,24,31,25,13,5,4,5,6,6,0,0,0,3,11,25,31,24,11,4,1,0,0,0,0,0,0,0,0,0,1,4,14,26,28,19,8,3,3,6,12,17,0,0,0,4,17,34,39,30,17,6,2,0,0,0,0,0,0,0,0,0,1,6,15,24,22,12,4,1,2,8,21,35,0,0,1,6,20,38,42,35,22,10,3,1,0,0,0,0,0,0,0,0,2,7,16,21,16,7,2,1,3,12,31,50,0,0,1,7,22,37,42,38,29,17,6,1,0,0,0,0,0,0,0,0,2,7,16,18,13,6,2,1,4,17,39,60,0,0,2,9,24,39,43,42,37,25,11,3,0,0,0,0,0,0,0,0,2,7,14,16,12,5,2,1,5,19,41,59,0,0,2,10,28,43,45,44,43,33,17,6,1,0,0,0,0,0,0,0,2,7,15,17,12,6,2,1,5,15,31,43,0,0,2,12,31,45,44,43,46,40,25,11,3,1,0,0,0,0,0,0,2,8,17,20,15,8,4,2,3,8,16,23,0,0,3,13,33,45,41,39,44,44,33,17,6,2,0,0,0,0,0,0,2,7,17,22,18,11,6,3,2,4,7,10,0,0,3,16,36,43,36,32,40,45,38,22,9,2,0,0,0,0,0,1,2,7,16,22,21,15,10,7,4,3,3,4,0,0,4,17,36,39,29,25,34,43,40,26,12,4,1,1,1,1,1,1,2,6,13,21,24,21,16,12,7,3,2,1,0,0,3,15,31,33,22,18,27,38,38,27,14,6,2,2,2,2,2,2,3,5,12,21,29,30,25,19,11,4,1,0,0,0,3,12,26,27,16,12,21,32,34,26,15,7,4,3,4,5,6,7,7,7,11,19,30,34,31,25,16,7,2,0,0,0,2,12,24,24,13,9,16,27,30,25,16,9,6,6,8,9,11,13,13,12,12,17,27,33,31,28,21,10,3,1,0,0,2,10,21,20,11,7,12,22,27,24,19,13,9,9,11,12,15,17,17,16,14,16,25,33,33,30,23,11,3,1,0,0,2,8,17,17,8,4,9,17,24,25,24,21,15,13,14,15,16,19,19,18,15,16,24,34,37,34,23,10,2,1,0,0,2,9,17,15,7,3,7,15,23,28,30,29,23,19,18,16,16,17,17,16,14,14,21,31,37,33,20,7,1,1,0,0,2,10,19,15,6,3,6,14,25,33,37,38,32,26,22,17,13,13,13,13,12,12,16,24,29,25,13,4,1,0,0,0,2,11,18,13,4,2,5,13,26,37,43,45,42,34,26,18,12,10,10,10,9,8,10,14,16,13,6,2,0,0,0,0,2,8,13,9,2,1,3,11,25,39,46,49,47,40,31,19,10,7,6,6,5,4,4,6,6,5,2,0,0,0,0,0,1,5,8,5,1,1,2,8,21,37,46,46,44,39,31,19,9,4,3,3,2,2,2,2,2,1,0,0,0,0,0,0,1,3,5,3,1,1,2,7,18,35,46,45,39,34,26,15,6,2,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,2,1,1,2,7,17,34,50,48,37,28,18,9,3,1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,3,6,6,4,2,2,3,6,15,31,44,42,31,21,11,5,2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,2,7,13,14,8,4,3,3,5,11,20,27,25,17,10,5,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,11,21,22,13,5,3,3,4,6,10,12,10,6,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,6,15,26,26,14,5,3,3,2,3,4,4,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,9,20,31,28,14,6,4,4,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
        // const data = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,6,12,13,22,36,27,29,20,11,7,4,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,4,8,7,14,23,24,31,39,38,30,23,19,12,10,5,3,1,0,0,0,0,0,0,0,0,0,1,2,13,13,12,33,23,24,24,54,38,31,27,43,33,42,31,31,33,37,46,66,29,16,8,2,2,1,0,0,0,0,2,4,26,26,34,35,23,24,33,42,31,37,34,29,46,40,32,40,31,26,34,35,29,49,30,19,9,3,0,0,0,1,5,17,15,15,14,17,28,37,29,40,31,44,42,36,44,38,50,37,41,36,48,31,45,18,19,24,18,5,0,0,1,2,18,25,6,5,3,9,19,23,20,21,41,39,36,49,41,57,74,36,37,30,44,20,18,3,4,17,29,7,0,0,2,5,43,24,4,4,2,2,5,17,26,21,46,33,42,32,48,53,47,45,43,44,28,9,3,2,3,8,40,84,17,0,2,5,18,3,1,1,1,1,2,7,11,15,22,31,56,45,38,45,56,49,42,27,17,3,1,0,0,1,4,15,1,0,5,3,4,2,1,1,1,1,2,3,8,26,45,47,37,31,30,33,35,31,45,33,8,2,0,0,0,0,1,3,0,0,1,0,1,0,0,1,0,1,1,1,3,15,28,30,26,24,13,38,38,26,37,16,3,1,0,0,0,0,2,2,0,0,3,1,3,3,1,1,1,1,1,2,9,13,37,22,22,12,6,24,18,30,19,29,10,3,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,1,3,10,23,20,23,21,35,31,42,23,29,17,32,18,5,1,0,0,0,0,1,0,0,0,0,0,1,1,0,1,2,3,21,22,45,22,21,30,41,30,16,22,36,35,35,17,4,0,0,0,0,0,0,0,0,1,1,1,2,1,0,1,2,6,31,50,36,31,39,51,69,51,26,23,26,31,28,15,4,1,0,0,0,1,2,0,0,1,0,1,2,3,4,16,23,43,63,32,54,50,31,42,44,42,47,43,52,47,31,45,29,3,0,0,0,0,1,0,0,1,0,1,1,2,2,11,77,47,45,30,33,41,46,52,28,24,30,57,50,32,40,53,36,5,1,1,0,0,1,0,0,1,0,0,1,2,3,12,35,75,32,49,38,47,61,35,28,53,31,34,28,32,37,26,41,13,1,0,0,1,1,0,0,0,0,0,1,2,2,16,46,34,58,50,40,31,45,36,26,43,53,40,32,44,44,42,22,3,0,0,0,0,1,1,0,0,0,1,1,2,2,16,25,62,45,56,51,29,23,18,6,14,33,34,56,35,48,31,24,3,0,0,0,0,0,0,0,0,0,0,0,2,2,14,21,36,26,44,24,7,5,3,1,1,2,7,23,25,26,20,28,4,0,0,0,0,1,0,0,0,0,0,0,2,2,21,22,14,18,31,11,3,1,1,0,1,1,2,18,16,12,22,18,3,0,0,0,0,0,0,0,0,0,0,0,2,2,11,26,17,32,27,6,1,1,0,0,0,0,1,10,14,12,13,11,2,0,0,0,0,0,0,0,0,0,0,0,1,2,9,27,29,16,6,0,0,0,0,0,0,0,0,2,3,17,16,9,1,0,0,0,0,0,0,0,0,0,0,0,1,1,4,12,5,1,1,0,0,0,0,0,0,0,0,0,0,3,15,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,3,2,1,1,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,26,25,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,20,10,4,1,0,0,0,0,1,2,7,19,69,69,9,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,10,53,62,45,22,6,2,0,0,3,18,85,93,115,115,16,3,1,0,0,0,0,0,0,0,0,0,0,0,0,1,6,32,76,92,119,104,36,7,0,0,5,45,108,118,139,139,19,3,2,1,1,0,0,0,0,0,0,0,0,0,0,1,4,22,66,79,141,121,62,13,0,1]
        // const data1 = [2,1,1,6,88,88,69,69,38,27,4,2,1,2,1,1,1,1,1,1,1,2,2,5,25,42,53,110,76,66,6,2,1,0,1,3,39,39,53,50,37,19,2,1,0,0,0,0,0,0,0,0,0,0,0,2,11,40,29,41,11,4,1,0,1,0,1,2,27,27,68,49,37,12,2,1,0,0,0,0,0,0,0,0,0,0,0,1,7,33,27,20,5,3,0,0,0,0,0,0,3,3,9,35,22,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,1,0,0,0,0,0,0,0,0,0,1,3,8,10,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,13,20,9,1,0,0,0,0,0,0,0,2,9,14,20,20,15,2,0,1,1,0,0,0,0,0,0,0,0,1,3,14,26,35,27,14,4,1,0,0,1,1,1,12,23,29,20,21,12,2,1,0,0,0,0,0,0,0,0,1,1,1,4,23,31,36,27,34,13,4,1,1,1,1,3,27,25,32,20,27,19,8,1,1,1,0,0,0,0,0,0,0,0,1,2,13,16,24,24,26,14,6,2,1,1,1,4,19,20,23,33,36,17,11,3,5,1,1,3,0,0,1,1,2,2,1,3,16,18,41,39,57,28,17,5,3,6,8,28,29,43,47,27,41,11,9,5,3,1,2,15,1,0,1,2,3,3,1,3,11,34,38,42,34,50,37,44,40,67,55,52,50,70,39,47,28,35,14,4,2,1,2,2,1,0,3,4,4,4,2,4,26,40,44,72,78,57,68,57,38,36,43,57,32,54,38,46,48,36,17,3,2,2,2,2,0,0,4,7,6,6,2,3,16,46,51,52,40,51,72,79,51,61,48,52,61,39,27,34,39,42,22,3,2,1,2,2,0,0,3,12,9,8,2,3,16,32,30,50,34,35,61,48,53,42,36,44,42,33,36,45,34,36,18,3,2,1,3,3,0,0,3,5,5,5,2,2,4,11,25,29,46,38,49,36,32,49,62,57,34,40,57,38,28,14,5,1,2,1,3,5,0,0,0,0,0,0,0,0,0,1,2,13,28,34,32,16,37,30,38,16,15,25,21,18,10,3,2,1,1,1,5,5,0,0,0,3,2,2,0,0,0,0,1,3,8,16,18,12,19,19,26,25,19,18,15,11,5,2,1,1,1,1,24,38,0,0,0,10,3,3,1,0,0,0,1,2,7,15,22,29,24,16,12,20,12,15,22,9,2,2,2,1,2,3,56,71,0,0,1,15,18,18,2,0,0,0,0,1,3,14,12,23,14,7,9,17,17,18,14,6,1,1,1,1,1,3,25,85,1,0,1,21,52,52,7,2,1,1,1,2,3,12,12,26,29,10,16,30,25,14,18,8,2,2,1,1,1,1,17,27,1,0,1,14,88,88,14,3,2,1,1,2,3,15,27,24,43,27,19,26,25,15,18,9,3,2,2,2,2,3,27,59,0,0,0,2,22,22,9,3,1,1,2,3,5,26,22,29,35,31,25,51,29,31,27,19,13,10,13,5,5,6,21,28,0,0,0,1,12,12,10,4,2,2,3,10,25,37,33,40,30,49,54,33,47,40,34,35,43,39,36,24,13,8,41,23,0,0,0,1,6,6,26,15,4,3,7,27,33,33,27,50,36,59,34,29,49,33,36,36,34,51,54,61,80,25,25,24,0,0,1,1,5,5,22,19,12,27,26,39,28,41,31,30,33,28,28,37,46,53,44,47,38,56,43,37,50,71,30,7,0,0,0,0,1,2,3,6,20,38,38,21,16,21,21,24,26,25,35,50,30,27,37,38,29,28,40,22,18,9,3,2,1,0,0,0,0,0,0,1,3,9,18,18,21,28,26,28,29,21,46,28,15,23,32,27,28,12,8,2,2,2,1,1,0,0,0,0,0,0,0,0,0,1,1,3,5,11,25,25,37,27,31,14,12,14,16,8,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,2,11,11,6,7,5,8,17,9,3,3,1,2,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,4,3,12,9,3,1,2,0,1,0,0]
        // const data = [0,0,0,0,0,0,0,0,1,1,2,3,4,5,7,10,11,10,8,5,3,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,3,4,6,9,12,15,19,22,23,21,16,12,8,6,5,4,3,1,1,0,0,0,0,0,0,0,1,2,4,5,7,9,10,11,15,19,22,24,28,32,32,30,25,20,17,16,16,15,11,7,4,2,1,1,0,0,0,1,2,5,10,13,16,19,19,21,25,30,32,31,33,35,37,35,32,29,27,28,30,30,25,18,12,8,4,2,1,0,0,1,4,9,14,18,21,24,25,27,31,35,36,35,36,37,39,40,38,36,34,34,36,36,32,26,20,15,10,5,1,0,1,4,9,13,14,15,16,19,23,27,30,33,36,38,38,40,42,45,44,41,37,36,36,33,28,23,19,18,15,9,4,1,2,7,14,16,12,9,9,12,17,22,25,29,35,38,40,41,45,49,50,44,39,36,32,25,18,13,12,17,21,18,9,2,4,9,16,15,8,5,4,6,10,15,20,25,32,37,40,42,44,48,49,45,40,34,26,16,9,5,6,13,22,24,14,4,4,8,11,9,5,2,2,3,5,9,15,22,31,37,40,40,40,43,45,43,39,30,19,9,4,2,2,6,13,15,9,3,3,4,5,4,2,1,1,1,3,6,11,21,30,35,36,33,32,36,38,37,34,26,14,5,2,0,1,2,4,5,3,1,2,2,2,2,1,1,1,1,2,4,10,19,27,30,28,25,25,29,31,31,29,22,12,4,1,0,0,1,1,2,1,0,2,1,1,1,1,1,1,1,2,5,11,18,25,26,24,23,23,26,27,27,26,21,13,5,2,0,0,0,1,1,0,0,1,1,1,1,1,1,1,2,4,9,16,22,25,25,27,28,28,27,27,27,27,24,16,7,2,0,0,0,0,0,0,0,1,1,1,1,1,1,2,4,10,18,26,30,29,30,34,37,34,29,28,29,30,26,18,9,3,1,0,0,0,0,0,0,1,1,1,1,2,3,6,12,20,30,36,37,36,37,41,44,40,34,32,34,33,30,23,13,5,1,0,0,0,1,0,0,1,1,1,2,3,6,14,26,35,40,41,41,41,41,43,43,40,38,39,40,38,35,31,21,9,2,0,0,0,1,0,0,1,1,1,1,3,7,20,37,45,44,41,41,43,44,42,38,37,39,41,41,39,38,36,27,13,4,1,0,0,1,0,0,1,0,1,1,3,7,20,38,47,46,43,41,42,43,39,35,36,38,39,38,37,38,35,27,13,4,1,0,0,1,0,0,0,0,0,1,3,7,19,34,45,47,46,42,38,36,31,29,32,36,37,37,38,38,33,23,11,3,1,0,0,0,0,0,0,0,0,1,2,7,17,30,40,44,43,37,29,23,19,17,20,25,30,34,35,35,30,21,9,2,0,0,0,0,0,0,0,0,0,1,2,7,15,24,31,34,34,27,17,11,8,6,8,12,17,24,26,26,24,18,8,2,0,0,0,0,0,0,0,0,0,1,2,6,14,20,24,26,24,17,8,4,2,2,2,4,8,14,17,18,18,14,7,2,0,0,0,0,0,0,0,0,0,1,2,6,13,19,21,21,17,10,4,1,1,0,0,1,4,8,11,13,14,10,5,1,0,0,0,0,0,0,0,0,0,0,1,4,10,16,17,14,10,5,1,0,0,0,0,0,2,4,7,10,11,8,3,1,0,0,0,0,0,0,0,0,0,0,1,2,6,9,9,6,4,1,0,0,0,0,0,0,0,1,3,6,7,5,2,1,0,0,0,0,0,0,0,0,0,0,0,1,2,3,3,2,1,0,0,0,0,0,0,0,0,0,1,2,3,2,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,1,1,1,1,0,0,0,0,1,2,4,7,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,6,6,4,3,1,0,0,0,1,3,8,16,25,24,12,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,3,10,19,22,18,12,6,2,0,0,5,13,27,43,56,49,25,7,2,0,0,0,0,0,0,0,0,0,0,0,0,2,7,21,39,50,49,37,20,7,2,0,11,30,57,80,91,76,38,11,2,1,0,0,0,0,0,0,0,0,0,0,0,3,11,30,55,76,84,71,41,16,4,1,17,45,81,106,115,93,46,13,3,1,1,0,0,0,0,0,0,0,0,0,1,3,12,32,60,88,105,94,58,24,6,1]
        const data = [2,1,1,6,88,88,69,69,38,27,4,2,1,2,1,1,1,1,1,1,1,2,2,5,25,42,53,110,76,66,6,2,1,0,1,3,39,39,53,50,37,19,2,1,0,0,0,0,0,0,0,0,0,0,0,2,11,40,29,41,11,4,1,0,1,0,1,2,27,27,68,49,37,12,2,1,0,0,0,0,0,0,0,0,0,0,0,1,7,33,27,20,5,3,0,0,0,0,0,0,3,3,9,35,22,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,1,0,0,0,0,0,0,0,0,0,1,3,8,10,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,13,20,9,1,0,0,0,0,0,0,0,2,9,14,20,20,15,2,0,1,1,0,0,0,0,0,0,0,0,1,3,14,26,35,27,14,4,1,0,0,1,1,1,12,23,29,20,21,12,2,1,0,0,0,0,0,0,0,0,1,1,1,4,23,31,36,27,34,13,4,1,1,1,1,3,27,25,32,20,27,19,8,1,1,1,0,0,0,0,0,0,0,0,1,2,13,16,24,24,26,14,6,2,1,1,1,4,19,20,23,33,36,17,11,3,5,1,1,3,0,0,1,1,2,2,1,3,16,18,41,39,57,28,17,5,3,6,8,28,29,43,47,27,41,11,9,5,3,1,2,15,1,0,1,2,3,3,1,3,11,34,38,42,34,50,37,44,40,67,55,52,50,70,39,47,28,35,14,4,2,1,2,2,1,0,3,4,4,4,2,4,26,40,44,72,78,57,68,57,38,36,43,57,32,54,38,46,48,36,17,3,2,2,2,2,0,0,4,7,6,6,2,3,16,46,51,52,40,51,72,79,51,61,48,52,61,39,27,34,39,42,22,3,2,1,2,2,0,0,3,12,9,8,2,3,16,32,30,50,34,35,61,48,53,42,36,44,42,33,36,45,34,36,18,3,2,1,3,3,0,0,3,5,5,5,2,2,4,11,25,29,46,38,49,36,32,49,62,57,34,40,57,38,28,14,5,1,2,1,3,5,0,0,0,0,0,0,0,0,0,1,2,13,28,34,32,16,37,30,38,16,15,25,21,18,10,3,2,1,1,1,5,5,0,0,0,3,2,2,0,0,0,0,1,3,8,16,18,12,19,19,26,25,19,18,15,11,5,2,1,1,1,1,24,38,0,0,0,10,3,3,1,0,0,0,1,2,7,15,22,29,24,16,12,20,12,15,22,9,2,2,2,1,2,3,56,71,0,0,1,15,18,18,2,0,0,0,0,1,3,14,12,23,14,7,9,17,17,18,14,6,1,1,1,1,1,3,25,85,1,0,1,21,52,52,7,2,1,1,1,2,3,12,12,26,29,10,16,30,25,14,18,8,2,2,1,1,1,1,17,27,1,0,1,14,88,88,14,3,2,1,1,2,3,15,27,24,43,27,19,26,25,15,18,9,3,2,2,2,2,3,27,59,0,0,0,2,22,22,9,3,1,1,2,3,5,26,22,29,35,31,25,51,29,31,27,19,13,10,13,5,5,6,21,28,0,0,0,1,12,12,10,4,2,2,3,10,25,37,33,40,30,49,54,33,47,40,34,35,43,39,36,24,13,8,41,23,0,0,0,1,6,6,26,15,4,3,7,27,33,33,27,50,36,59,34,29,49,33,36,36,34,51,54,61,80,25,25,24,0,0,1,1,5,5,22,19,12,27,26,39,28,41,31,30,33,28,28,37,46,53,44,47,38,56,43,37,50,71,30,7,0,0,0,0,1,2,3,6,20,38,38,21,16,21,21,24,26,25,35,50,30,27,37,38,29,28,40,22,18,9,3,2,1,0,0,0,0,0,0,1,3,9,18,18,21,28,26,28,29,21,46,28,15,23,32,27,28,12,8,2,2,2,1,1,0,0,0,0,0,0,0,0,0,1,1,3,5,11,25,25,37,27,31,14,12,14,16,8,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,2,11,11,6,7,5,8,17,9,3,3,1,2,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,4,3,12,9,3,1,2,0,1,0,0]
        for (let i = 0; i < 32; i++) {
            newData[i] = []
            for (let j = 0; j < 32; j++) {
                newData[i].push(data[i * 32 + j])
            }
        }
        setData(newData)

    }, [flag]);
    return (
        <>
            <div>
                {data.map((a, indexs) => {
                    return (
                        <div style={{ display: "flex" }}>
                            {a.map((b, index) => {
                                return <div style={{ width: "10px", height: "10px", backgroundColor: `rgb(${jet(0, 30, b)})` }}></div>;
                            })}
                        </div>
                    );
                })}
            </div>
            <div style={{ fontSize: "50px" }}>{max}</div>
            <div style={{ fontSize: "30px" }}>{maxCol}</div>

            <Slider
                min={1}
                max={10000}
                onChange={(value) => {
                    localStorage.setItem("carValuePress", value);
                    setValuePress(value);
                    pressValue = value;
                }}
                value={valuePress}
                step={5}
                // value={this.props.}
                style={{ width: "200px" }}
            />
            <div style={{ display: "flex" }}>
                <Input
                    value={name}
                    onChange={(e) => {
                        setName(e.target.value);
                    }}
                />
                <Input
                    value={objArea}
                    onChange={(e) => {
                        setArea(e.target.value);
                    }}
                />
                <Button
                    onClick={() => {
                        const res = !flag;
                        setFlag(res);
                        colFalg = !colFalg;
                    }}
                >
                    采集{length - 1}
                </Button>
                <Button
                    onClick={() => {
                        const length = wsPointData.filter((a) => a > 0).length;
                        const total = wsPointData.reduce((a, b) => a + b, 0);
                        const area = (total / length).toFixed(2);
                        collection.push([JSON.stringify(wsPointData), area, name, eval(name), objArea, eval(objArea)]);
                        localStorage.setItem("collection", JSON.stringify(collection));
                        setCsvData(collection);
                        setLength(collection.length);
                    }}
                >
                    单次采集{length - 1}
                </Button>
                <Button
                    onClick={() => {
                        // const res = !flag
                        // setFlag(res)
                        collection = [["data", "name"]];
                        localStorage.setItem("collection", JSON.stringify(collection));
                        setLength(1);
                    }}
                >
                    删除
                </Button>
                <CSVLink
                    // ref={downloadRef}

                    filename={`${new Date().getTime()}.csv`}
                    data={csvData}
                    style={{ color: "#5A5A89", textDecoration: "none" }}
                >
                    下载
                </CSVLink>
            </div>
        </>
    );
}
